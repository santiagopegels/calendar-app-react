{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-message-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFav.js","components/ui/DeleteEventFav.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFav","DeleteEventFav","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","view","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9acd08a.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","const baseUrl = process.env.REACT_APP_API_URL\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`\n\n    if (method === 'GET') {\n        return fetch(url)\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n\n        })\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`\n    const token = localStorage.getItem('token') || ''\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        })\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n\n        })\n    }\n}\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken\n}\n","\nexport const types = {\n\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventStartAddNew: '[event] Start Add new',\n    eventAddNew: '[event] Add new',\n    eventSetActive: '[event] Set active',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded', \n    eventLogout: '[event] Logout event',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout',\n}","import moment from 'moment'\n\nexport const prepareEvents = (events) => {\n\n    return events.map((event) => ({\n        ...event,\n        end: moment(event.end).toDate(),\n        start: moment(event.start).toDate(),\n    })\n    )\n\n}\n","import { types } from \"../types/types\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth\n\n        try {\n            const resp = await fetchWithToken('events', event, 'POST')\n            const body = await resp.json()\n            console.log(body);\n\n            if (body.ok) {\n                event.id = body.event.id\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch(eventAddNew(event))\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n})\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT')\n            const body = await resp.json()\n\n            if (body.ok) {\n                dispatch(eventUpdated(event))\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n})\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE')\n            const body = await resp.json()\n\n            if (body.ok) {\n                dispatch(eventDeleted())\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}\n\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n})\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n\n            const resp = await fetchWithToken('events')\n            const body = await resp.json()\n\n            const events = prepareEvents(body.events)\n\n            dispatch(eventLoaded(events))\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})\n\n","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\"\nimport Swal from \"sweetalert2\"\nimport { eventLogout } from \"./events\"\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n\n        const resp = await fetchWithoutToken('auth/login', { email, password }, 'POST')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.user.uid,\n                name: body.user.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n\n    }\n}\n\nexport const startRegister = (name, email, password) => {\n    return async (dispatch) => {\n\n        const resp = await fetchWithoutToken('auth/register', { email, password, name }, 'POST')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.user.uid,\n                name: body.user.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n\n    }\n}\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchWithToken('auth/renew')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.user.uid,\n                name: body.user.name\n            }))\n        } else {\n            dispatch(checkingFinish())\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear()\n        dispatch(eventLogout())\n        dispatch(logout())\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })\n","import React from 'react';\nimport './login.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        loginEmail: '1524@test.com',\n        loginPassword: '123123'\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        registerName: 'Test',\n        registerEmail: '123123@test.com',\n        registerPassword1: '123123',\n        registerPassword2: '123123'\n    });\n\n    const { loginEmail, loginPassword } = formLoginValues\n    const { registerName, registerEmail, registerPassword1, registerPassword2 } = formRegisterValues\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        dispatch(startLogin(loginEmail, loginPassword))\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (registerPassword1 !== registerPassword2) {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\n        }\n\n        dispatch(startRegister(registerName, registerEmail, registerPassword1, registerPassword2))\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"loginEmail\"\n                                value={loginEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"loginPassword\"\n                                value={loginPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"registerName\"\n                                value={registerName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"registerEmail\"\n                                value={registerEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"registerPassword1\"\n                                value={registerPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"registerPassword2\"\n                                value={registerPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n\nexport const Navbar = () => {\n\n    const { name } = useSelector(state => state.auth)\n    const dispatch = useDispatch()\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n    \n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","\nexport const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({type: types.uiOpenModal})\nexport const uiCloseModal = () => ({type: types.uiCloseModal})","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal';\n\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: new Date(),\n    end: new Date()\n}\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch()\n\n    const { modalOpen } = useSelector(state => state.ui)\n    const { activeEvent } = useSelector(state => state.calendar)\n\n    const [formValues, setFormValues] = useState(initEvent)\n    const [titleValid, setTitleValid] = useState(true)\n\n    const { notes, title, start, end } = formValues\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initEvent)\n        }\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n    const handleStartDateChange = (e) => {\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault()\n\n        const momentStart = moment(start)\n        const momentEnd = moment(end)\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la de inicio', 'error')\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false)\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch(eventStartAddNew(formValues))\n\n        }\n        setTitleValid(true)\n        closeModal()\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal())\n        dispatch(eventClearActiveEvent())\n        setFormValues(initEvent)\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            closeTimeoutMS={200}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h2> {activeEvent ? 'Editar Evento' : 'Nuevo evento'} </h2>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={start}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={end}\n                        minDate={start}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFav = () => {\n\n    const dispatch = useDispatch()\n\n    const handleClicknew = () => {\n        dispatch(uiOpenModal())\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fav\"\n            onClick={handleClicknew}\n        >\n            <i className=\"fas fa-plus\"></i>\n\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFav = () => {\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete())\n    }\n    return (\n        <button\n            className='btn btn-danger fav-danger'\n            onClick={handleDelete}\n        >\n            <i className='fas fa-trash'></i>\n            <span> Borrar Evento</span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Navbar } from '../ui/Navbar'\nimport { messages } from '../../helpers/calendar-message-es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events'\nimport { AddNewFav } from '../ui/AddNewFav'\nimport { DeleteEventFav } from '../ui/DeleteEventFav'\n\nmoment.locale('es')\n\nconst localizer = momentLocalizer(moment)\n\nexport const CalendarScreen = () => {\n\n    const { events, activeEvent } = useSelector(state => state.calendar)\n    const { uid } = useSelector(state => state.auth)\n\n    const dispatch = useDispatch()\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n    }, [dispatch])\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: (uid===event.user._id) ? '#367CF7' : '#465560',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white',\n        }\n        return {\n            style\n        }\n    }\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal())\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e))\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e)\n        localStorage.setItem('lastView', e)\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent())\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                view={lastView}\n                eventPropGetter={eventStyleGetter}\n                components={{\n                    event: CalendarEvent\n                }}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n            />\n\n            <AddNewFav />\n\n            {activeEvent &&\n                <DeleteEventFav />\n            }\n            <CalendarModal\n\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route\n            {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/\" />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname)\n\n    return (\n        <Route\n            {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/login\" />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    if (checking) {\n        return (<h1>Espere...</h1>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n        default:\n            return state;\n    }\n}\n","import moment from 'moment'\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(event => (event.id === action.payload.id) ? action.payload : event)\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(event => (event.id !== state.activeEvent.id)),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n            case types.eventLogout:\n                return {\n                    ...initialState\n                }\n\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { uiReducer } from \"./uiReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { authReducer } from \"./authReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport { AppRouter } from './router/AppRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}